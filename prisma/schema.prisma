generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "debian-openssl-1.1.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model questions {
  id             String           @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  quiz_id        String           @db.Uuid
  text           String
  options        String[]
  correct_answer String
  created_at     DateTime         @default(now()) @db.Timestamptz(6)
  quizzes        quizzes          @relation(fields: [quiz_id], references: [id], onDelete: Cascade)
  user_responses user_responses[]
}

model quizzes {
  id                    String           @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  user_id               String           @db.Uuid
  quiz_title            String
  created_at            DateTime         @default(now()) @db.Timestamptz(6)
  total_time_taken      Int?
  correct_answers_count Int              @default(0)
  questions             questions[]
  users                 users            @relation(fields: [user_id], references: [id], onDelete: Cascade)
  user_responses        user_responses[]
}

model users {
  id              String            @id @default(dbgenerated("auth.uid()")) @db.Uuid
  email           String
  password        String?           @unique
  created_at      DateTime          @default(now()) @db.Timestamptz(6)
  quizzes         quizzes[]
  user_usage_data user_usage_data[]
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model user_responses {
  id          String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  question_id String    @db.Uuid
  quiz_id     String    @db.Uuid
  user_answer String
  is_correct  Boolean
  created_at  DateTime  @default(now()) @db.Timestamptz(6)
  questions   questions @relation(fields: [question_id], references: [id], onDelete: SetNull)
  quizzes     quizzes   @relation(fields: [quiz_id], references: [id], onDelete: Cascade)
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model user_usage_data {
  id                String   @id(map: "quiz_usage_data_pkey") @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  user_id           String   @db.Uuid
  prompt_tokens     Int
  completion_tokens Int
  total_tokens      Int
  created_at        DateTime @default(now()) @db.Timestamptz(6)
  users             users    @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}
